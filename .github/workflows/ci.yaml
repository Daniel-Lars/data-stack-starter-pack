name: CI_pipeline
on:
  pull_request:
    branches:
      - main

jobs:
  CI_jobs:
    runs-on: self-hosted
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER}}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD}}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB}}
      PR_NUMBER: ${{ github.event.number }}
    steps:
      - name: Checkout # clones and pulls the repo at pull request SHA
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v5

      - name: Install Python
        run: uv python install

      - name: Install deps
        run: uv sync

      - name: Install Project Dependencies
        run: uv sync --group ci

      - name: Ruff Linting
        uses: astral-sh/ruff-action@v3

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: echo PR Number
        run: echo "$PR_NUMBER"

      - name: dbt build
        run: |
            cd ./dbt/analytics_data_stack/
            uv run dbt debug --target test
            uv run dbt deps
            uv run dbt run-operation create_all_samples --target sample-test
            uv run dbt build --target test

      - name: Cleanup Test Schemas
        if: always()  # Ensures this step runs even if the job fails
        run: |
          PGPASSWORD=$POSTGRES_PASSWORD psql -h test_postgres -U ${{ secrets.POSTGRES_USER}} -d ${{ secrets.POSTGRES_DB }} -c "DROP SCHEMA IF EXISTS ci_${PR_NUMBER} CASCADE;""
